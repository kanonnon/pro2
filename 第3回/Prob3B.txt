【3-7】
(1) x = 1
(2) x = 1
(3) x = 3
(4) p = (0, 0)
(5) p = (2, 3)
(6) p = (2, 3)
(7) a[0] = 4
    a[1] = 3
と出力される。
(1) 変数xに1が代入されており、変更が加えられずそのまま出力されているため、x = 1と表示される。
(2) int型は基本型であるため、mainメソッド内の変数xは、別のメソッドの引数として用いられたとき、変数xの値がコピーされるだけである。
    すなわち、change1メソッド内でインクリメントされても、値が変わるのはchange1メソッド内の変数xの値であり、mainメソッド内の変数xは変更されず、x = 1と表示される。
(3) (2)と同様に、int型は基本型であるため、change2メソッドの仮引数には、実引数の値1が代入される。
    change2メソッド内の変数xに2が加えられて、その値が返り値として指定されており、その返り値が変数xに代入されているため、x = 3と表示される。
    このとき、change2メソッドを実行したことにより、直接mainメソッド内の変数xが3と書き換えられたわけではなく、change2メソッドの返り値が代入されただけである。
(4) MyPointクラスのインスタンスを生成すると、まずはインスタンス変数xとyの値が0に初期化される。
    したがって、初期化された値が(0, 0)とそのまま出力される。
(5) クラスは参照型であるため、メソッドの引数として用いられたとき、仮引数にはオブジェクトを指す参照のコピーが渡される。
    したがって、changePoint1メソッド内の変数pが指す参照先は、mainメソッド内の変数pが指すものと同じである。
    changePoint1メソッド内のsetPointメソッドの実行により、変数pの共通の参照先のxとyの値が書き換えられるため、(2, 3)と出力される。
(6) changePoint2メソッドでは、変数pに新しいMyPointクラスのインスタンスが代入されている。
    新たなインスタンスであるから、変数pには新たな参照先が代入されているため、changePoint2メソッド内の変数pの参照先が変更されても、minメソッドの変数pには影響しない。
(7) 配列は参照型であるため、メソッドの引数として用いられたとき、仮引数にはオブジェクトを指す参照のコピーが渡される。
    したがって、changeArray1メソッド内の変数aが指す参照先は、mainメソッド内の変数aが指すものと同じである。
    「a[0] = 4;」の実行により、変数aの共通の参照先の値が書き換えられるため、上記のように出力される。

【3-8】
16.1245154965971

【3-9】

【3-10】