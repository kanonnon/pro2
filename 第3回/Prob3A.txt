【3-1】
「MyPoint p;」はMyPointクラスの変数を宣言しているだけなので、インスタンスは生成されていない。
「MyPoint p = new MyPoint;」としてインスタンスを変数に代入してからでないと、setPointメソッドは使えない。

【3-2】
MyPointクラスのインスタンス変数yは、宣言時にprivate修飾子が付けられている。
したがって、MyPointクラス以外のクラスからインスタンス変数yにアクセスすることはできない。

【3-3】
「int[] a;」は配列を宣言しているだけなので、まだ配列はできておらず、値を代入することはできない。
「int[] a = new int[要素数];」の形で配列を作成してから、配列を使用できる。

【3-4】
「int[] a = new int[20];」によって、要素数20の配列が作られ、そのインデックスは0から19までである。
したがって、配列aにインデックス20は存在しないので、アクセスできない。

【3-5】
String[] fruits = new String[] {"apple", "grape", "orange"};

【3-6】
Hello! -4
Hello! -421
Hello! 17
と出力される。
「文字列 + 基本型の値」という形で連結をすると、基本型は文字列に変換される。
iにはint型の-4が代入されているので、int型が文字列に変換され、1行目では「Hello! -4」という文字列が出力される。
2行目では、「Hello!」という文字列と、int型から文字列に変換された「-4」と「21」の3つの文字列が連結するため、「Hello! -421」という文字列が出力される。
3行目では、()の中身の数値が先に「-4 + 21 = 17」と計算されるため、文字列「Hello!」と文字列「17」が連結し、「Hello! 17」という文字列が出力される。