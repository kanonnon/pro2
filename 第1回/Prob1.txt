【1-3】
・実行結果
My name is Kanon Amemiya, and my ID number is 62101046.
1: Hello World!
2: Hello World!
3: Hello World!
Goodbye World!

・理由説明
Hello World!の行頭に行番号を記す必要があるが、その数字を1から始まるようにするため、for文ではiを1に初期化した。

【1-4】
・実行結果
5 8 -2

・理由説明
i = 5、j = 8、k = -2となる。
「++i」や「j++」は「i = i + 1」「j = j + 1」に置き換えられるインクリメントの式である。
iは4で初期化、jは7で初期化していることから、それぞれ1ずつ増加し、iは5、jは8と出力される。
ただし、「++」の記号が変数の前後どちらにくるかによって、挙動が異なる。
例えば、「b = ++a」という式があるとき、aをインクリメントしてからbに代入する。
一方で、「b = a++」という式があるとき、aをbに代入してからaをインクリメントする。
したがって、「k = ++i - j++」について、iはインクリメント後の数が、jはインクリメント前の数が反映され、
「k = 5 - 7」と置き換えられるため、kは-2と出力される。

【1-5】
・実行結果
true

・理由説明
xには「i == 4 && j < 0 || i > 0」の計算結果として、trueが代入される。
まず、「i == 4」「j < 0」「i > 0」について、それぞれtrue、false、trueと評価される。
AND演算子「&&」は、OR演算子「||」より優先度が高いことから、まずは「i == 4 && j < 0」が評価され、
「true && false」であることから、falseとなる。
次に、「false || i > 0」が評価され、「false || true」であることから、trueとなる。
したがって、xにはtrueが代入され、trueと出力される。

【1-6】
・実行結果
1 in → 2.54 cm
2 in → 5.08 cm
3 in → 7.62 cm
4 in → 10.16 cm
5 in → 12.7 cm
6 in → 15.24 cm
7 in → 17.78 cm
8 in → 20.32 cm
9 in → 22.86 cm
10 in → 25.4 cm
11 in → 27.94 cm
12 in → 30.48 cm
13 in → 33.02 cm
14 in → 35.56 cm
15 in → 38.1 cm
16 in → 40.64 cm
17 in → 43.18 cm
18 in → 45.72 cm
19 in → 48.26 cm
20 in → 50.8 cm
21 in → 53.34 cm
22 in → 55.88 cm
23 in → 58.42 cm
24 in → 60.96 cm
25 in → 63.5 cm

・理由説明
調べた結果によると、1インチは2.54センチメートルだという。
for文で25回ループを回し、各インチの値に2.54をかけることで、センチメートルへの変換表を作った。

【1-7】
・実行結果
3202と704の最大公約数は2です

・理由説明
ユークリッドの互除法では、2つの整数aとbの最大公約数を求める場合、まずaをbで割った余りrを求める。
次に、bをrで割った余りを求める。この操作を繰り返して余りが0になるまで行う。
最後に、最後に求めた余りが最大公約数となる。
したがって、割り算をしたその結果の余りが0になったときに割り算の繰り返しを終えるため、
繰り返し処理の中身を実行してから繰り返しの条件式を評価するdo while文の方が、
単なるwhile文よりも効率よくコードを書くことができるため、今回はそちらを採用した。
割り算のあまりが0でない繰り返しを続けるという条件式を立てた。

【1-8】
・実行結果
6は完全数です
28は完全数です
496は完全数です

・理由説明
1から1000までの整数を順番に取り出し、それぞれの約数の和が自分自身と等しい場合に、その数を完全数として出力する。
内側のforループで、現在の整数iについて、1からi-1までの整数が約数であるかどうかを判断している。
約数が見つかった場合は、その値を変数sumに加える。
このとき、内側のループ条件を「j < i」としているため、i自身はsumには加わらない。
最後に、外側のforループで、sumとiが等しい場合に、iを完全数として出力する。
実行すると、6、28、496が1から1000までの完全数であることがわかる。